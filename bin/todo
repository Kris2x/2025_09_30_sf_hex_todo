#!/usr/bin/env php
<?php

use App\Task\Presentation\Cli\Command\AssignTaskConsoleCommand;
use App\Task\Presentation\Cli\Command\CompleteTaskConsoleCommand;
use App\Task\Presentation\Cli\Command\CreateTaskConsoleCommand;
use App\Task\Presentation\Cli\Command\DeleteTaskConsoleCommand;
use App\Task\Presentation\Cli\Command\GetTasksConsoleCommand;
use App\Task\Presentation\Cli\TodoApplication;
use App\User\Presentation\Cli\Command\CreateUserConsoleCommand;
use App\User\Presentation\Cli\Command\DeleteUserConsoleCommand;
use App\User\Presentation\Cli\Command\GetUsersConsoleCommand;
use Symfony\Component\Dotenv\Dotenv;

require_once dirname(__DIR__).'/vendor/autoload.php';

// Load environment variables
if (file_exists(dirname(__DIR__).'/.env')) {
    (new Dotenv())->bootEnv(dirname(__DIR__).'/.env');
}

// Boot Symfony kernel to get the container
$kernel = new App\Kernel($_SERVER['APP_ENV'] ?? 'dev', (bool) ($_SERVER['APP_DEBUG'] ?? true));
$kernel->boot();
$container = $kernel->getContainer();

// Create application
$application = new TodoApplication();

// Register commands from container
$application->add($container->get(CreateTaskConsoleCommand::class));
$application->add($container->get(GetTasksConsoleCommand::class));
$application->add($container->get(CompleteTaskConsoleCommand::class));
$application->add($container->get(DeleteTaskConsoleCommand::class));
$application->add($container->get(AssignTaskConsoleCommand::class));
$application->add($container->get(CreateUserConsoleCommand::class));
$application->add($container->get(GetUsersConsoleCommand::class));
$application->add($container->get(DeleteUserConsoleCommand::class));

// Set default command
$application->setDefaultCommand('list');

// Run
$application->run();
