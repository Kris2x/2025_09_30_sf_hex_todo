#!/usr/bin/env php
<?php

use App\Task\Presentation\Cli\Command\CompleteTaskCommand;
use App\Task\Presentation\Cli\Command\CreateTaskCommand;
use App\Task\Presentation\Cli\Command\DeleteTaskCommand;
use App\Task\Presentation\Cli\Command\GetTasksCommand;
use App\Task\Presentation\Cli\TodoApplication;
use App\User\Presentation\Cli\Command\CreateUserCommand;
use App\User\Presentation\Cli\Command\DeleteUserCommand;
use App\User\Presentation\Cli\Command\GetUsersCommand;
use Symfony\Component\Dotenv\Dotenv;

require_once dirname(__DIR__).'/vendor/autoload.php';

// Load environment variables
if (file_exists(dirname(__DIR__).'/.env')) {
    (new Dotenv())->bootEnv(dirname(__DIR__).'/.env');
}

// Boot Symfony kernel to get the container
$kernel = new App\Kernel($_SERVER['APP_ENV'] ?? 'dev', (bool) ($_SERVER['APP_DEBUG'] ?? true));
$kernel->boot();
$container = $kernel->getContainer();

// Create application
$application = new TodoApplication();

// Register commands from container
$application->add($container->get(CreateTaskCommand::class));
$application->add($container->get(GetTasksCommand::class));
$application->add($container->get(CompleteTaskCommand::class));
$application->add($container->get(DeleteTaskCommand::class));
$application->add($container->get(CreateUserCommand::class));
$application->add($container->get(GetUsersCommand::class));
$application->add($container->get(DeleteUserCommand::class));

// Set default command
$application->setDefaultCommand('list');

// Run
$application->run();
